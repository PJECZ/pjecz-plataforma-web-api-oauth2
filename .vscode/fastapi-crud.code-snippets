{
    "FastAPI crud": {
        "scope": "python",
        "prefix": "fcrud",
        "body": [
            "\"\"\"",
            "${1:Modulos} ${2:v1}, CRUD (create, read, update, and delete)",
            "\"\"\"",
            "from typing import Any",
            "from sqlalchemy.orm import Session",
            "",
            "from lib.safe_string import safe_string",
            "from .models import ${3:Modelo}",
            "",
            "",
            "def get_${4:blueprint}(",
            "\tdb: Session,",
            "\tfiltro_id: int = None,",
            "\tfiltro_descripcion: str = None,",
            "\tfiltro_boleano: bool = False,",
            ") -> Any:",
            "\t\"\"\" Consultar los ${4:blueprint} activos \"\"\"",
            "\tconsulta = db.query(${3:Modelo})",
            "\tif filtro_id:",
            "\t\tconsulta = consulta.filter_by(filtro_id=filtro_id)",
            "\tfiltro_descripcion = safe_string(filtro_descripcion)",
            "\tif filtro_descripcion:",
            "\t\tconsulta = consulta.filter_by(filtro_descripcion=filtro_descripcion)",
            "\tif filtro_boleano is True:",
            "\t\tconsulta = consulta.filetr_by(filtro_boleano=True)",
            "\treturn consulta.filter_by(estatus=\"A\").order_by(${3:Modelo}.${5:nombre_o_descripcion})",
            "",
            "",
            "def get_${6:singular}(db: Session, ${6:singular}_id: int) -> ${3:Modelo}:",
            "\t\"\"\" Consultar un ${6:singular} por su id \"\"\"",
            "\t${6:singular} = db.query(${3:Modelo}).get(${6:singular}_id)",
            "\tif ${6:singular} is None:",
            "\t\traise IndexError",
            "\treturn ${6:singular}",
            ""
        ],
        "description": "Contenido para crud.py"
    }
}
