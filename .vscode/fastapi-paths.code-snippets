{
    "FastAPI paths": {
        "scope": "python",
        "prefix": "fpaths",
        "body": [
            "\"\"\"",
            "${1:Modulos} v1, rutas (paths)",
            "\"\"\"",
            "from fastapi import APIRouter, Depends, HTTPException, status",
            "from fastapi_pagination.ext.sqlalchemy import paginate",
            "from sqlalchemy.orm import Session",
            "",
            "from lib.database import get_db",
            "from lib.fastapi_pagination import LimitOffsetPage",
            "",
            "from plataforma_web.v1.${2:blueprint}.crud import get_${2:blueprint}, get_${3:singular}",
            "from plataforma_web.v1.${2:blueprint}.schemas import ${4:EsquemaOut}",
            "from plataforma_web.v1.permisos.models import Permiso",
            "from plataforma_web.v1.usuarios.authentications import get_current_active_user",
            "from plataforma_web.v1.usuarios.schemas import UsuarioInDB",
            "",
            "${2:blueprint} = APIRouter(prefix=\"/v1/${2:blueprint}\", tags=[\"${5:categoria}\"])",
            "",
            "",
            "@${2:blueprint}.get(\"\", response_model=LimitOffsetPage[${4:EsquemaOut}])",
            "async def listado_${2:blueprint}(",
            "\tcurrent_user: UsuarioInDB = Depends(get_current_active_user),",
            "\tdb: Session = Depends(get_db),",
            "):",
            "\t\"\"\"Listado de ${6:comentario}\"\"\"",
            "\tif \"${7:MODULO}\" not in current_user.permissions or current_user.permissions[\"${7:MODULO}\"] < Permiso.VER:",
            "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
            "\ttry:",
            "\t\tlistado = get_${2:blueprint}(db)",
            "\texcept IndexError as error:",
            "\t\traise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"Not found: {str(error)}\") from error",
            "\texcept ValueError as error:",
            "\t\traise HTTPException(status_code=status.HTTP_406_NOT_ACCEPTABLE, detail=f\"Not acceptable: {str(error)}\") from error",
            "\treturn paginate(listado)",
            "",
            "",
            "@${2:blueprint}.get(\"/{${3:singular}_id}\", response_model=${4:EsquemaOut})",
            "async def detalle_${3:singular}(",
            "\t${3:singular}_id: int,",
            "\tcurrent_user: UsuarioInDB = Depends(get_current_active_user),",
            "\tdb: Session = Depends(get_db),",
            "):",
            "\t\"\"\"Detalle de una ${6:comentario} a partir de su id\"\"\"",
            "\tif \"${7:MODULO}\" not in current_user.permissions or current_user.permissions[\"${7:MODULO}\"] < Permiso.VER:",
            "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
            "\ttry:",
            "\t\t${3:singular} = get_${3:singular}(db, ${3:singular}_id=${3:singular}_id)",
            "\texcept IndexError as error:",
            "\t\traise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"Not found: {str(error)}\") from error",
            "\texcept ValueError as error:",
            "\t\traise HTTPException(status_code=status.HTTP_406_NOT_ACCEPTABLE, detail=f\"Not acceptable: {str(error)}\") from error",
            "\treturn ${4:EsquemaOut}.from_orm(${3:singular})",
            ""
        ],
        "description": "Contenido para paths.py"
    },
    "FastAPI paths listado": {
        "scope": "python",
        "prefix": "fpaths_listado",
        "body": [
            "@${1:blueprint}.get(\"\", response_model=LimitOffsetPage[${2:EsquemaOut}])",
            "async def listado_${1:blueprint}(",
            "\tcurrent_user: UsuarioInDB = Depends(get_current_active_user),",
            "\tdb: Session = Depends(get_db),",
            "):",
            "\t\"\"\"Listado de ${3:comentario}\"\"\"",
            "\tif \"${4:MODULO}\" not in current_user.permissions or current_user.permissions[\"${4:MODULO}\"] < Permiso.VER:",
            "\t\traise HTTPException(status_code=status.HTTP_403_FORBIDDEN, detail=\"Forbidden\")",
            "\ttry:",
            "\t\tlistado = get_${1:blueprint}(db)",
            "\texcept IndexError as error:",
            "\t\traise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"Not found: {str(error)}\") from error",
            "\texcept ValueError as error:",
            "\t\traise HTTPException(status_code=status.HTTP_406_NOT_ACCEPTABLE, detail=f\"Not acceptable: {str(error)}\") from error",
            "\treturn paginate(listado)",
            ""
        ],
        "description": "Listado"
    }
}
